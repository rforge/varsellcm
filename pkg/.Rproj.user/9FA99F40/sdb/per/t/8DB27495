{
    "contents" : "VSLCM_initialization_omega <- function(n, d, g){\n  omega <- rep(0, d)\n  cb <- sample(2:(min(n,d)),1)\n  omega[sample(1:d, cb)] <- 1\n  return(omega)\n}\n\n# VSLCM_initialization_z <- function(omega, g, x){\n#   z <- rep(1, nrow(x))\n#   \n#   if ((g>1)&&(sum(omega)>0)){\n#     filtre <- 0\n#     tmp <- mixmodCluster(data = as.data.frame(x[,which(omega==1)]),\n#                          nbCluster = g,\n#                          models = mixmodGaussianModel(listModels = \"Gaussian_pk_Lk_Bk\")\n#     )\n#     if (tmp@error == FALSE)\n#       z <- tmp@bestResult@partition\n#     else\n#       z <- sample(1:g, nrow(x), replace=TRUE)\n#     \n#   }\n#   \n#   return(list(z=z,error=1*tmp@error))\n# }\n\nVSLCM_initialization_z <- function(omega, g, x){\n  z <- rep(1, nrow(x))\n  error <- 0\n  if ((g>1)&&(sum(omega)>0)){\n    if (sum(omega)==1){\n      test <- try(Mclust(data = as.data.frame(x[,which(omega==1)]), G = g, modelNames = \"V\"), silent = TRUE)    \n    }else{\n      test <- try(Mclust(data = as.data.frame(x[,which(omega==1)]), G = g, modelNames = \"VVI\"), silent = TRUE)    \n    }\n    if (class(test) == \"Mclust\"){\n      z <- test$classification\n    }else{\n      z <- sample(1:g, nrow(x), replace=TRUE)    \n      error <- 1\n    }\n    \n  }\n  \n  return(list(z=z, error=error))\n}\n\n\nVSLCM_initialization_priors <- function(x){\n  priors <- matrix(1, ncol(x), 4)\n  colnames(priors) <- c(\"alpha\", \"beta\", \"lambda\", \"delta\")\n  for (j in 1:ncol(x)){\n    priors[j,1] <- 1.28*2\n    priors[j,2] <- sqrt(0.72 * var(x[,j]))\n    priors[j,3] <- mean(x[,j])\n    priors[j,4] <- 2.6 /(max(x[,j]) - min(x[,j]))\n  }\n  priors <- matrix(1, ncol(x), 4)\n  return(priors)\n}\n\nVarSelStartingPoint <- function(x, g, omega, z, priors){\n  if (missing(priors))\n    priors <- VSLCM_initialization_priors(as.matrix(x))\n  \n  # Initialization\n  if (missing(omega)){\n    omega <- VSLCM_initialization_omega(nrow(x), ncol(x), g)\n    \n    if (missing(z))\n      tmp <- VSLCM_initialization_z(omega, g, x)\n    \n    while (tmp$error == 1){\n      omega <- VSLCM_initialization_omega(nrow(x), ncol(x), g)\n      tmp <- VSLCM_initialization_z(omega, g, x)\n    }\n    z <- tmp$z\n  }\n  \n  if (missing(z))\n    z <- VSLCM_initialization_z(omega, g, x)$z\n  \n  if (min(z)>0)\n    z <- z-1\n  \n  starting <- new(\"VSLCMresults\",\n                  data = as.matrix(x),\n                  priors = priors,\n                  criteria = new(\"VSLCMcriteria\", likelihood=-Inf, BIC=-Inf, ICLbic=-Inf, ICLexact=-Inf, MICL=-Inf),\n                  partitions = new(\"VSLCMpartitions\", zMAP=z, zOPT=z),\n                  model = new(\"VSLCMmodel\", g=g, omega=omega),\n                  parameters = new(\"VSLCMparameters\")\n  )\n  return( starting )\n}\n",
    "created" : 1418826417821.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3850932186",
    "id" : "8DB27495",
    "lastKnownWriteTime" : 1417695832,
    "path" : "~/Documents/Recherche/variable_selection/package/VarSelLCM/R/VSLCM_initialization.R",
    "project_path" : "R/VSLCM_initialization.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}