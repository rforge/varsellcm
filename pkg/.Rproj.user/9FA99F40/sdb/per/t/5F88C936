{
    "contents" : "\n\n\n\nVarSelModelSelection <- function(x, g, nbinit=20,  parallel=TRUE){\n  if (parallel == FALSE){\n    \n     reference <- new(\"VSLCMresults\", criteria = new(\"VSLCMcriteria\", likelihood=-Inf, BIC=-Inf, ICL=-Inf, MICL=-Inf))\n     for (it in 1:nbinit){\n       where <- VarSelStartingPoint(x, g)\n       cand <- OptimizeMICL(where, 1)\n       if (cand@criteria@MICL > reference@criteria@MICL)\n         reference <- cand\n     }\n     \n  }else{\n    \n    reference <- list()\n    for (it in 1:nbinit)\n      reference[[it]] <- VarSelStartingPoint(x, g)\n    \n    nb.cpus <- min(detectCores(all.tests = FALSE, logical = FALSE) , nbinit)\n    reference <- mclapply(X = reference,\n                        FUN = OptimizeMICL,\n                        optimize=1,\n                        mc.cores = nb.cpus,\n                        mc.preschedule = TRUE,\n                        mc.cleanup = TRUE\n    )\n    tmp <- rep(0, nbinit)\n    for (it in 1:nbinit){\n      tmp[it] <- reference[[it]]@criteria@MICL\n    }\n\n      \n    \n   \n      reference <- reference[[which(tmp == max(tmp))[1]]]   \n    \n\n    \n \n  }\n  \n  return( reference )\n}\n\n# VarSelParamEstim <- function(obj){\n#   \n#   obj@criteria@likelihood <- 0\n#   obj@criteria@BIC <- 0\n#   obj@criteria@ICL <- 0\n#   \n#   obj@parameters@means <- matrix(0, obj@model@g, ncol(obj@data))\n#   rownames(obj@parameters@means ) <- paste(\"Class\", 1:obj@model@g)\n#   obj@parameters@variances <- matrix(0, obj@model@g, ncol(obj@data))\n#   rownames(obj@parameters@variances ) <- paste(\"Class\", 1:obj@model@g)\n#   \n#   obj@partitions@zOPT <- as.numeric(obj@partitions@zOPT) + 1\n#   \n#   \n#   if (sum(obj@model@omega) > 0){\n#     discrim <- mixmodCluster(data = as.data.frame(obj@data[, which(obj@model@omega == 1)]),\n#                              nbCluster = obj@model@g,\n#                              models = mixmodGaussianModel(listModels = \"Gaussian_pk_Lk_Bk\")\n#     )\n#     if ((discrim@error == 1)||( discrim@bestResult@likelihood==0)){\n#       tmp <- VSLCM_XEM(as.matrix(obj@data[, which(obj@model@omega == 1)]), obj@partitions@zOPT, obj@model@g)\n#       obj@partitions@tik <- tmp$tik\n#       obj@partitions@zMAP <- tmp$z\n#       obj@criteria@likelihood <- tmp$loglike\n#       obj@criteria@BIC <- tmp$bic\n#       obj@parameters@proportions <- tmp$pi\n#       obj@parameters@means[,which(obj@model@omega == 1)]<- tmp$means\n#       obj@parameters@variances[, which(obj@model@omega == 1)]<- tmp$variances\n#     }else{\n#       obj@criteria@likelihood <- discrim@bestResult@likelihood\n#       obj@criteria@BIC <- -discrim@bestResult@criterionValue/2\n#       obj@partitions@zMAP <- discrim@bestResult@partition\n#       obj@partitions@tik <- discrim@bestResult@proba\n#       obj@parameters@proportions <- discrim@bestResult@parameters@proportions\n#       obj@parameters@means[,which(obj@model@omega == 1)]<- discrim@bestResult@parameters@mean\n#       for (k in 1:nrow(obj@parameters@variances)){\n#         for (it in 1:sum(obj@model@omega)){\n#           obj@parameters@variances[k, which(obj@model@omega == 1)[it]]<- discrim@bestResult@parameters@variance[[k]][it, it]\n#         }\n#       }\n#     }\n#     \n#   }\n#   \n#   if (any(obj@model@omega == 0) ){\n#     discrim <- mixmodCluster(data = as.data.frame(obj@data[, which(obj@model@omega == 0)]),\n#                              nbCluster = 1,\n#                              models = mixmodGaussianModel(listModels = \"Gaussian_pk_Lk_Bk\")\n#     )\n#     if (discrim@error == 0){\n#       \n#       \n#       obj@criteria@likelihood <- obj@criteria@likelihood + discrim@bestResult@likelihood\n#       obj@criteria@BIC <- obj@criteria@BIC - discrim@bestResult@criterionValue/2\n#       for (k in 1:obj@model@g){\n#         obj@parameters@means[k, which(obj@model@omega == 0)] <- discrim@bestResult@parameters@mean\n#         for (it in 1:sum(1 - obj@model@omega)){\n#           obj@parameters@variances[k, which(obj@model@omega == 0)[it]]<- discrim@bestResult@parameters@variance[[1]][it, it]\n#         }\n#       }\n#     }else{\n#       for (j in  which(obj@model@omega == 0)){\n#         me <- mean(obj@data[,j])\n#         va <- var(obj@data[,j])\n#         loglike <- sum( dnorm(obj@data[,j], me, sqrt(va), log = TRUE))\n#         obj@criteria@likelihood <- obj@criteria@likelihood + loglike\n#         obj@criteria@BIC <- obj@criteria@BIC + loglike - log(nrow(obj@data))\n#       }     \n#     }\n#   }\n#   \n#   \n#   \n#   obj@criteria@ICL <- obj@criteria@BIC\n#   if ((obj@model@g > 1) && (sum(obj@model@omega)>0)){\n#     for (k in 1:obj@model@g)\n#       obj@criteria@ICL <- obj@criteria@ICL + sum(log(obj@partitions@tik[which(obj@partitions@zMAP==k), k]))\n#     \n#   }\n#   \n#   \n#   return(obj)\n# }\n# \n\nVarSelParamEstim <- function(obj){\n  \n  obj@criteria@likelihood <- 0\n  obj@criteria@BIC <- 0\n  obj@criteria@ICLbic <- 0\n  obj@criteria@ICLexact <- 0\n  \n  obj@parameters@means <- matrix(0, obj@model@g, ncol(obj@data))\n  rownames(obj@parameters@means ) <- paste(\"Class\", 1:obj@model@g)\n  obj@parameters@variances <- matrix(0, obj@model@g, ncol(obj@data))\n  rownames(obj@parameters@variances ) <- paste(\"Class\", 1:obj@model@g)\n  \n  obj@partitions@zOPT <- as.numeric(obj@partitions@zOPT) + 1\n  \n  \n  if (sum(obj@model@omega) > 0){\n    if (sum(obj@model@omega)==1){\n      discrim <- try(Mclust(data = as.data.frame(obj@data[, which(obj@model@omega == 1)]), G = obj@model@g, modelNames = \"V\"), silent=TRUE)\n    }else{\n      discrim <- try(Mclust(data = as.data.frame(obj@data[, which(obj@model@omega == 1)]), G = obj@model@g, modelNames = \"VVI\"), silent=TRUE)\n      if (class(discrim) == \"try-error\")\n        discrim <- try(Mclust(data = as.data.frame(obj@data[, which(obj@model@omega == 1)]), G = obj@model@g, modelNames = c(\"EII\", \"VII\",\"EEI\", \"EVI\", \"VVI\")), silent=TRUE)\n    }\n    if (class(discrim)==\"Mclust\"){\n      obj@criteria@likelihood <- discrim$loglik\n      obj@criteria@BIC <- discrim$loglik - (obj@model@g * 2 * sum(obj@model@omega) + (obj@model@g-1)) * 0.5 * log(nrow(obj@data))\n      obj@partitions@zMAP <- discrim$classification\n      obj@partitions@tik <- discrim$z\n      obj@parameters@proportions <- discrim$parameters$pro\n      obj@parameters@means[,which(obj@model@omega == 1)]<- t(discrim$parameters$mean)\n      if (sum(obj@model@omega)==1){\n        obj@parameters@variances[,which(obj@model@omega == 1) ] <- discrim$parameters$variance$sigmasq\n      }else{\n        for (k in 1:nrow(obj@parameters@variances))\n          obj@parameters@variances[k,which(obj@model@omega == 1) ]<- diag(discrim$parameters$variance$sigma[,,k])  \n      }\n    }else{\n      print(\"error in the parameter estimation\")\n      obj@criteria@BIC <- -Inf\n      obj@criteria@likelihood <- -Inf\n      obj@partitions@tik <- matrix(1, nrow(obj@data), obj@model@g)\n    }\n   \n  }\n  \n  if (any(obj@model@omega == 0) ){\n    for (j in  which(obj@model@omega == 0)){\n      me <- mean(obj@data[,j])\n      va <- var(obj@data[,j])\n      obj@parameters@means[,j] <- me\n      obj@parameters@variances[,j] <- va\n      loglike <- sum( dnorm(obj@data[,j], me, sqrt(va), log = TRUE))\n      obj@criteria@likelihood <- obj@criteria@likelihood + loglike\n      obj@criteria@BIC <- obj@criteria@BIC + loglike - log(nrow(obj@data))\n    }\n  }\n  \n  obj@criteria@ICLbic <- obj@criteria@BIC\n  if ((obj@model@g > 1) && (sum(obj@model@omega)>0)){\n    for (k in 1:obj@model@g)\n      obj@criteria@ICLbic<- obj@criteria@ICLbic + sum(log(obj@partitions@tik[which(obj@partitions@zMAP==k), k]))  \n  }  \n  obj@criteria@ICLexact <-  Integre_Complete_Like(obj)\n  \n  return(obj)\n}\n\nVarSelCluster <- function(x, g, nbinit=50, parallel = TRUE){\n  models <- VarSelModelSelection(x, g, nbinit, parallel)\n  return(  VarSelParamEstim(models) )\n}\n\nVarSelModelKnown <- function(x, g, omega)\n  return( VarSelParamEstim(OptimizeMICL(VarSelStartingPoint(x, g, omega), 0)))\n",
    "created" : 1418131940158.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2475820244",
    "id" : "5F88C936",
    "lastKnownWriteTime" : 1417689216,
    "path" : "~/Documents/Recherche/variable_selection/package/VarSelLCM/R/VarSelLCM.R",
    "project_path" : "R/VarSelLCM.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}